[tox]
skipsdist = True
envlist = flake8,type_check,py39,py310,py311,py312


# Pytest settings
[pytest]
addopts = -v -rf --strict-markers
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions =
    test_*

# Flake8/linter settings
[flake8]
max_line_length = 120
exclude = .tox,build,env**,.venv
ignore = E203,W503,W504

# Static type checks settings
[pytype]
exclude = tests/**
inputs = certbot_dns_websupport/
jobs = 8
python_version = 3.12

# Coverage settings
[coverage:run]
branch = True
source = certbot_dns_websupport

[coverage:report]
omit =
    .tox/*
    tests/*

exclude_lines =
    nocov
    pragma: no cover
    if TYPE_CHECKING:

ignore_errors = True

[coverage:html]
directory = coverage_html_report

# Test environment settings
[base]
allowlist_externals = poetry
commands =
    poetry install -v

# Linting
[testenv:flake8]
basepython = python3.12
deps = flake8
commands =
    flake8

# Type check
[testenv:type_check]
allowlist_externals={[base]allowlist_externals}
basepython = python3.12
commands =
    {[base]commands}
    poetry run pytype --config tox.ini

# Unit tests
[testenv:py38]
allowlist_externals={[base]allowlist_externals}
basepython = python3.9
commands =
    {[base]commands}
    poetry run coverage run -m py.test
    poetry run coverage report -m

# Unit tests
[testenv:py310]
allowlist_externals={[base]allowlist_externals}
basepython = python3.10
commands =
    {[base]commands}
    poetry run coverage run -m pytest
    poetry run coverage report -m

# Unit tests
[testenv:py311]
allowlist_externals={[base]allowlist_externals}
basepython = python3.11
commands =
    {[base]commands}
    poetry run coverage run -m pytest
    poetry run coverage report -m

[testenv:py312]
allowlist_externals={[base]allowlist_externals}
basepython = python3.12
commands =
    {[base]commands}
    poetry run coverage run -m pytest
    poetry run coverage report -m
